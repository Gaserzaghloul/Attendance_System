{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "accelerator": "GPU",
    "colab": {
      "name": "OpenHand-Models.ipynb",
      "provenance": [],
      "toc_visible": true,
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.9"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ArthurFDLR/pose-classification-kit/blob/master/examples/hand_pose_classification.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "uMvrR9_jnDwO"
      },
      "source": [
        "# ðŸ¤™ Pose Classification Kit: Hand pose classification model creation"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ONjOBMTanXiN"
      },
      "source": [
        "This Notebook can be used to create Neural Network classifiers running in the [Pose Classification Kit](https://github.com/ArthurFDLR/pose-classification-kit).\n",
        "\n",
        "First, we have to import several libraries to create and train a new model."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0Xvt8oHFae-I",
        "outputId": "c1ec4481-2f9f-44f2-a41f-c1076343b6db"
      },
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import matplotlib.patches as mpatches\n",
        "from matplotlib.lines import Line2D\n",
        "import os\n",
        "\n",
        "try:\n",
        "    import google.colab\n",
        "    IN_COLAB = True\n",
        "except:\n",
        "    IN_COLAB = False\n",
        "\n",
        "if IN_COLAB:\n",
        "    %tensorflow_version 2.x\n",
        "    !pip install pose-classification-kit\n",
        "    \n",
        "import tensorflow\n",
        "from tensorflow import keras\n",
        "from pose_classification_kit.datasets import handDataset\n",
        "\n",
        "print('Available GPU:')\n",
        "!nvidia-smi -L\n",
        "print('\\nTensorFlow use GPU at: {}'.format(tensorflow.test.gpu_device_name()))"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Collecting pose-classification-kit\n",
            "  Downloading pose_classification_kit-1.1.5-py3-none-any.whl (24.2 MB)\n",
            "\u001b[K     |â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 24.2 MB 24 kB/s \n",
            "\u001b[?25hRequirement already satisfied: pandas<2.0.0,>=1.1.5 in /usr/local/lib/python3.7/dist-packages (from pose-classification-kit) (1.1.5)\n",
            "Requirement already satisfied: numpy<1.20.0,>=1.19.2 in /usr/local/lib/python3.7/dist-packages (from pose-classification-kit) (1.19.5)\n",
            "Requirement already satisfied: tensorflow in /usr/local/lib/python3.7/dist-packages (from pose-classification-kit) (2.5.0)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas<2.0.0,>=1.1.5->pose-classification-kit) (2.8.1)\n",
            "Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas<2.0.0,>=1.1.5->pose-classification-kit) (2018.9)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas<2.0.0,>=1.1.5->pose-classification-kit) (1.15.0)\n",
            "Requirement already satisfied: grpcio~=1.34.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow->pose-classification-kit) (1.34.1)\n",
            "Requirement already satisfied: termcolor~=1.1.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow->pose-classification-kit) (1.1.0)\n",
            "Requirement already satisfied: tensorflow-estimator<2.6.0,>=2.5.0rc0 in /usr/local/lib/python3.7/dist-packages (from tensorflow->pose-classification-kit) (2.5.0)\n",
            "Requirement already satisfied: keras-nightly~=2.5.0.dev in /usr/local/lib/python3.7/dist-packages (from tensorflow->pose-classification-kit) (2.5.0.dev2021032900)\n",
            "Requirement already satisfied: typing-extensions~=3.7.4 in /usr/local/lib/python3.7/dist-packages (from tensorflow->pose-classification-kit) (3.7.4.3)\n",
            "Requirement already satisfied: opt-einsum~=3.3.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow->pose-classification-kit) (3.3.0)\n",
            "Requirement already satisfied: absl-py~=0.10 in /usr/local/lib/python3.7/dist-packages (from tensorflow->pose-classification-kit) (0.12.0)\n",
            "Requirement already satisfied: h5py~=3.1.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow->pose-classification-kit) (3.1.0)\n",
            "Requirement already satisfied: astunparse~=1.6.3 in /usr/local/lib/python3.7/dist-packages (from tensorflow->pose-classification-kit) (1.6.3)\n",
            "Requirement already satisfied: tensorboard~=2.5 in /usr/local/lib/python3.7/dist-packages (from tensorflow->pose-classification-kit) (2.5.0)\n",
            "Requirement already satisfied: gast==0.4.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow->pose-classification-kit) (0.4.0)\n",
            "Requirement already satisfied: flatbuffers~=1.12.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow->pose-classification-kit) (1.12)\n",
            "Requirement already satisfied: google-pasta~=0.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow->pose-classification-kit) (0.2.0)\n",
            "Requirement already satisfied: keras-preprocessing~=1.1.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow->pose-classification-kit) (1.1.2)\n",
            "Requirement already satisfied: wrapt~=1.12.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow->pose-classification-kit) (1.12.1)\n",
            "Requirement already satisfied: protobuf>=3.9.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow->pose-classification-kit) (3.17.3)\n",
            "Requirement already satisfied: wheel~=0.35 in /usr/local/lib/python3.7/dist-packages (from tensorflow->pose-classification-kit) (0.36.2)\n",
            "Requirement already satisfied: cached-property in /usr/local/lib/python3.7/dist-packages (from h5py~=3.1.0->tensorflow->pose-classification-kit) (1.5.2)\n",
            "Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.5->tensorflow->pose-classification-kit) (3.3.4)\n",
            "Requirement already satisfied: google-auth<2,>=1.6.3 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.5->tensorflow->pose-classification-kit) (1.32.1)\n",
            "Requirement already satisfied: tensorboard-data-server<0.7.0,>=0.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.5->tensorflow->pose-classification-kit) (0.6.1)\n",
            "Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.5->tensorflow->pose-classification-kit) (1.8.0)\n",
            "Requirement already satisfied: setuptools>=41.0.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.5->tensorflow->pose-classification-kit) (57.2.0)\n",
            "Requirement already satisfied: werkzeug>=0.11.15 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.5->tensorflow->pose-classification-kit) (1.0.1)\n",
            "Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.5->tensorflow->pose-classification-kit) (0.4.4)\n",
            "Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.5->tensorflow->pose-classification-kit) (2.23.0)\n",
            "Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.5->tensorflow->pose-classification-kit) (0.2.8)\n",
            "Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.7/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.5->tensorflow->pose-classification-kit) (4.7.2)\n",
            "Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.5->tensorflow->pose-classification-kit) (4.2.2)\n",
            "Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.7/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard~=2.5->tensorflow->pose-classification-kit) (1.3.0)\n",
            "Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from markdown>=2.6.8->tensorboard~=2.5->tensorflow->pose-classification-kit) (4.6.1)\n",
            "Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.7/dist-packages (from pyasn1-modules>=0.2.1->google-auth<2,>=1.6.3->tensorboard~=2.5->tensorflow->pose-classification-kit) (0.4.8)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.5->tensorflow->pose-classification-kit) (3.0.4)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.5->tensorflow->pose-classification-kit) (1.24.3)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.5->tensorflow->pose-classification-kit) (2.10)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.5->tensorflow->pose-classification-kit) (2021.5.30)\n",
            "Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard~=2.5->tensorflow->pose-classification-kit) (3.1.1)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->markdown>=2.6.8->tensorboard~=2.5->tensorflow->pose-classification-kit) (3.5.0)\n",
            "Installing collected packages: pose-classification-kit\n",
            "Successfully installed pose-classification-kit-1.1.5\n",
            "1 Physical GPUs, 1 Logical GPUs\n",
            "Available GPU:\n",
            "GPU 0: Tesla T4 (UUID: GPU-af7c2a09-6b1f-1f69-1e09-3f5cce81eb8e)\n",
            "\n",
            "TensorFlow use GPU at: /device:GPU:0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "JSmWOsSRg8i5"
      },
      "source": [
        "## Import dataset"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_v5VYGMCg8i6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d8ff7a93-970f-4b65-c3c8-05e2da9b825f"
      },
      "source": [
        "dataset = handDataset(testSplit=.2, shuffle=True, handID=1)\n",
        "x_train = dataset['x_train']\n",
        "y_train = dataset['y_train_onehot']\n",
        "labels = dataset['labels']\n",
        "\n",
        "x_train.shape, y_train.shape"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((4347, 42), (4347, 27))"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xRWuVIAHae-P"
      },
      "source": [
        "## Models exploration\n",
        "\n",
        "This section is optional. The following blocks can be used to compare different model architecture and training processes."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "93-aeO7Sae-P"
      },
      "source": [
        "model_train_history = {}\n",
        "input_dim = x_train.shape[1]\n",
        "validation_split = 0.20\n",
        "epochs = 15"
      ],
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PZ2p8pTDae-P",
        "outputId": "61465c76-065d-4e51-babc-596eb077b521"
      },
      "source": [
        "model = keras.models.Sequential(name = 'ANN-3x16',\n",
        "    layers =\n",
        "    [\n",
        "        keras.layers.InputLayer(input_shape=input_dim),\n",
        "        keras.layers.Dense(16, activation=keras.activations.relu),\n",
        "        keras.layers.Dense(16, activation=keras.activations.relu),\n",
        "        keras.layers.Dense(16, activation=keras.activations.relu),\n",
        "        keras.layers.Dense(len(labels), activation=keras.activations.softmax),\n",
        "    ]\n",
        ")\n",
        "\n",
        "model.summary()\n",
        "model.compile(\n",
        "    optimizer=keras.optimizers.Adam(),\n",
        "    loss='categorical_crossentropy',\n",
        "    metrics=['accuracy'],\n",
        ")\n",
        "\n",
        "model_train_history[model] = model.fit(\n",
        "    x=x_train,\n",
        "    y=y_train,\n",
        "    epochs=epochs,\n",
        "    batch_size=4,\n",
        "    validation_split=validation_split,\n",
        "    shuffle=True,\n",
        "    verbose=1,\n",
        ")"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"ANN-3x16\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense (Dense)                (None, 16)                688       \n",
            "_________________________________________________________________\n",
            "dense_1 (Dense)              (None, 16)                272       \n",
            "_________________________________________________________________\n",
            "dense_2 (Dense)              (None, 16)                272       \n",
            "_________________________________________________________________\n",
            "dense_3 (Dense)              (None, 27)                459       \n",
            "=================================================================\n",
            "Total params: 1,691\n",
            "Trainable params: 1,691\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "Epoch 1/15\n",
            "870/870 [==============================] - 6s 3ms/step - loss: 2.1664 - accuracy: 0.3739 - val_loss: 0.9488 - val_accuracy: 0.7379\n",
            "Epoch 2/15\n",
            "870/870 [==============================] - 3s 3ms/step - loss: 0.5192 - accuracy: 0.9025 - val_loss: 0.2680 - val_accuracy: 0.9736\n",
            "Epoch 3/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.1699 - accuracy: 0.9753 - val_loss: 0.1430 - val_accuracy: 0.9770\n",
            "Epoch 4/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0790 - accuracy: 0.9885 - val_loss: 0.0575 - val_accuracy: 0.9920\n",
            "Epoch 5/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0429 - accuracy: 0.9934 - val_loss: 0.0399 - val_accuracy: 0.9931\n",
            "Epoch 6/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0268 - accuracy: 0.9963 - val_loss: 0.0209 - val_accuracy: 0.9989\n",
            "Epoch 7/15\n",
            "870/870 [==============================] - 3s 3ms/step - loss: 0.0246 - accuracy: 0.9951 - val_loss: 0.0188 - val_accuracy: 0.9966\n",
            "Epoch 8/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0180 - accuracy: 0.9957 - val_loss: 0.0158 - val_accuracy: 0.9966\n",
            "Epoch 9/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0162 - accuracy: 0.9957 - val_loss: 0.0136 - val_accuracy: 0.9966\n",
            "Epoch 10/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0113 - accuracy: 0.9974 - val_loss: 0.0089 - val_accuracy: 0.9989\n",
            "Epoch 11/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0104 - accuracy: 0.9974 - val_loss: 0.0082 - val_accuracy: 0.9989\n",
            "Epoch 12/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0119 - accuracy: 0.9963 - val_loss: 0.0105 - val_accuracy: 0.9966\n",
            "Epoch 13/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0075 - accuracy: 0.9980 - val_loss: 0.0040 - val_accuracy: 0.9989\n",
            "Epoch 14/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0052 - accuracy: 0.9994 - val_loss: 0.0060 - val_accuracy: 0.9989\n",
            "Epoch 15/15\n",
            "870/870 [==============================] - 3s 3ms/step - loss: 0.0054 - accuracy: 0.9980 - val_loss: 0.0043 - val_accuracy: 0.9989\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ils0Rcv4ae-Q",
        "outputId": "2cf2db86-5a2a-4677-bcce-23771463ce89"
      },
      "source": [
        "model = keras.models.Sequential(name = 'ANN-3x64',\n",
        "                                   layers =\n",
        "    [\n",
        "        keras.layers.InputLayer(input_shape=input_dim),\n",
        "        keras.layers.Dense(64, activation=keras.activations.relu),\n",
        "        keras.layers.Dense(64, activation=keras.activations.relu),\n",
        "        keras.layers.Dense(64, activation=keras.activations.relu),\n",
        "        keras.layers.Dense(len(labels), activation=keras.activations.softmax),\n",
        "    ]\n",
        ")\n",
        "\n",
        "model.summary()\n",
        "model.compile(\n",
        "    optimizer=keras.optimizers.Adam(),\n",
        "    loss='categorical_crossentropy',\n",
        "    metrics=['accuracy'],\n",
        ")\n",
        "\n",
        "model_train_history[model] = model.fit(\n",
        "    x=x_train,\n",
        "    y=y_train,\n",
        "    epochs=epochs,\n",
        "    batch_size=4,\n",
        "    validation_split=validation_split,\n",
        "    shuffle=True,\n",
        "    verbose=1,\n",
        ")"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"ANN-3x64\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense_4 (Dense)              (None, 64)                2752      \n",
            "_________________________________________________________________\n",
            "dense_5 (Dense)              (None, 64)                4160      \n",
            "_________________________________________________________________\n",
            "dense_6 (Dense)              (None, 64)                4160      \n",
            "_________________________________________________________________\n",
            "dense_7 (Dense)              (None, 27)                1755      \n",
            "=================================================================\n",
            "Total params: 12,827\n",
            "Trainable params: 12,827\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "Epoch 1/15\n",
            "870/870 [==============================] - 3s 3ms/step - loss: 0.8565 - accuracy: 0.7725 - val_loss: 0.0948 - val_accuracy: 0.9839\n",
            "Epoch 2/15\n",
            "870/870 [==============================] - 3s 3ms/step - loss: 0.0676 - accuracy: 0.9822 - val_loss: 0.0447 - val_accuracy: 0.9943\n",
            "Epoch 3/15\n",
            "870/870 [==============================] - 3s 3ms/step - loss: 0.0244 - accuracy: 0.9934 - val_loss: 0.0177 - val_accuracy: 0.9977\n",
            "Epoch 4/15\n",
            "870/870 [==============================] - 3s 3ms/step - loss: 0.0165 - accuracy: 0.9957 - val_loss: 0.0071 - val_accuracy: 0.9989\n",
            "Epoch 5/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0173 - accuracy: 0.9951 - val_loss: 0.0208 - val_accuracy: 0.9920\n",
            "Epoch 6/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0111 - accuracy: 0.9965 - val_loss: 0.0039 - val_accuracy: 0.9989\n",
            "Epoch 7/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0026 - accuracy: 0.9997 - val_loss: 0.0020 - val_accuracy: 0.9989\n",
            "Epoch 8/15\n",
            "870/870 [==============================] - 3s 3ms/step - loss: 0.0314 - accuracy: 0.9919 - val_loss: 0.0026 - val_accuracy: 1.0000\n",
            "Epoch 9/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0037 - accuracy: 0.9991 - val_loss: 5.9867e-04 - val_accuracy: 1.0000\n",
            "Epoch 10/15\n",
            "870/870 [==============================] - 3s 3ms/step - loss: 0.0084 - accuracy: 0.9983 - val_loss: 0.0011 - val_accuracy: 1.0000\n",
            "Epoch 11/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0074 - accuracy: 0.9980 - val_loss: 0.0011 - val_accuracy: 1.0000\n",
            "Epoch 12/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0030 - accuracy: 0.9988 - val_loss: 0.0012 - val_accuracy: 1.0000\n",
            "Epoch 13/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0148 - accuracy: 0.9948 - val_loss: 8.3820e-04 - val_accuracy: 1.0000\n",
            "Epoch 14/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0020 - accuracy: 0.9991 - val_loss: 2.7807e-04 - val_accuracy: 1.0000\n",
            "Epoch 15/15\n",
            "870/870 [==============================] - 3s 3ms/step - loss: 0.0052 - accuracy: 0.9986 - val_loss: 3.6428e-04 - val_accuracy: 1.0000\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lUaetVfOae-Q",
        "outputId": "dce75f65-d00f-4acb-d3e7-ee05ea63d0cb"
      },
      "source": [
        "model = keras.models.Sequential(name = 'ANN-3x64-Dropouts',\n",
        "                                   layers =\n",
        "    [\n",
        "        keras.layers.InputLayer(input_shape=input_dim),\n",
        "        keras.layers.Dense(64, activation=keras.activations.relu),\n",
        "        keras.layers.Dropout(0.3),\n",
        "        keras.layers.Dense(64, activation=keras.activations.relu),\n",
        "        keras.layers.Dropout(0.3),\n",
        "        keras.layers.Dense(64, activation=keras.activations.relu),\n",
        "        keras.layers.Dropout(0.3),\n",
        "        keras.layers.Dense(len(labels), activation=keras.activations.softmax),\n",
        "    ]\n",
        ")\n",
        "\n",
        "model.summary()\n",
        "model.compile(\n",
        "    optimizer=keras.optimizers.Adam(),\n",
        "    loss='categorical_crossentropy',\n",
        "    metrics=['accuracy'],\n",
        ")\n",
        "\n",
        "model_train_history[model] = model.fit(\n",
        "    x=x_train,\n",
        "    y=y_train,\n",
        "    epochs=epochs,\n",
        "    batch_size=4,\n",
        "    validation_split=validation_split,\n",
        "    shuffle=True,\n",
        "    verbose=1,\n",
        ")"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"ANN-3x64-Dropouts\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense_8 (Dense)              (None, 64)                2752      \n",
            "_________________________________________________________________\n",
            "dropout (Dropout)            (None, 64)                0         \n",
            "_________________________________________________________________\n",
            "dense_9 (Dense)              (None, 64)                4160      \n",
            "_________________________________________________________________\n",
            "dropout_1 (Dropout)          (None, 64)                0         \n",
            "_________________________________________________________________\n",
            "dense_10 (Dense)             (None, 64)                4160      \n",
            "_________________________________________________________________\n",
            "dropout_2 (Dropout)          (None, 64)                0         \n",
            "_________________________________________________________________\n",
            "dense_11 (Dense)             (None, 27)                1755      \n",
            "=================================================================\n",
            "Total params: 12,827\n",
            "Trainable params: 12,827\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "Epoch 1/15\n",
            "870/870 [==============================] - 3s 3ms/step - loss: 1.9308 - accuracy: 0.3897 - val_loss: 0.4994 - val_accuracy: 0.8966\n",
            "Epoch 2/15\n",
            "870/870 [==============================] - 3s 3ms/step - loss: 0.7115 - accuracy: 0.7449 - val_loss: 0.1693 - val_accuracy: 0.9678\n",
            "Epoch 3/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.4514 - accuracy: 0.8435 - val_loss: 0.0786 - val_accuracy: 0.9908\n",
            "Epoch 4/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.3256 - accuracy: 0.8944 - val_loss: 0.0548 - val_accuracy: 0.9931\n",
            "Epoch 5/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.2681 - accuracy: 0.9108 - val_loss: 0.0292 - val_accuracy: 0.9977\n",
            "Epoch 6/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.2054 - accuracy: 0.9373 - val_loss: 0.0237 - val_accuracy: 0.9966\n",
            "Epoch 7/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.1761 - accuracy: 0.9379 - val_loss: 0.0170 - val_accuracy: 0.9966\n",
            "Epoch 8/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.1785 - accuracy: 0.9405 - val_loss: 0.0127 - val_accuracy: 0.9977\n",
            "Epoch 9/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.1387 - accuracy: 0.9557 - val_loss: 0.0084 - val_accuracy: 0.9989\n",
            "Epoch 10/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.1311 - accuracy: 0.9571 - val_loss: 0.0070 - val_accuracy: 0.9989\n",
            "Epoch 11/15\n",
            "870/870 [==============================] - 3s 3ms/step - loss: 0.1086 - accuracy: 0.9655 - val_loss: 0.0082 - val_accuracy: 0.9966\n",
            "Epoch 12/15\n",
            "870/870 [==============================] - 3s 3ms/step - loss: 0.1182 - accuracy: 0.9612 - val_loss: 0.0046 - val_accuracy: 0.9989\n",
            "Epoch 13/15\n",
            "870/870 [==============================] - 3s 3ms/step - loss: 0.1024 - accuracy: 0.9664 - val_loss: 0.0030 - val_accuracy: 1.0000\n",
            "Epoch 14/15\n",
            "870/870 [==============================] - 3s 3ms/step - loss: 0.1046 - accuracy: 0.9666 - val_loss: 0.0017 - val_accuracy: 1.0000\n",
            "Epoch 15/15\n",
            "870/870 [==============================] - 3s 3ms/step - loss: 0.0746 - accuracy: 0.9773 - val_loss: 0.0025 - val_accuracy: 1.0000\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FA1LSFoVae-R",
        "outputId": "0765de87-c32f-4080-bc57-bebec642df6b"
      },
      "source": [
        "model = keras.models.Sequential(name = 'ANN-2x128',\n",
        "                                   layers =\n",
        "    [\n",
        "        keras.layers.InputLayer(input_shape=input_dim),\n",
        "        keras.layers.Dense(128, activation=keras.activations.relu),\n",
        "        keras.layers.Dense(128, activation=keras.activations.relu),\n",
        "        keras.layers.Dense(len(labels), activation=keras.activations.softmax),\n",
        "    ]\n",
        ")\n",
        "\n",
        "model.summary()\n",
        "model.compile(\n",
        "    optimizer=keras.optimizers.Adam(),\n",
        "    loss='categorical_crossentropy',\n",
        "    metrics=['accuracy'],\n",
        ")\n",
        "\n",
        "model_train_history[model] = model.fit(\n",
        "    x=x_train,\n",
        "    y=y_train,\n",
        "    epochs=epochs,\n",
        "    batch_size=4,\n",
        "    validation_split=validation_split,\n",
        "    shuffle=True,\n",
        "    verbose=1,\n",
        ")"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"ANN-2x128\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense_12 (Dense)             (None, 128)               5504      \n",
            "_________________________________________________________________\n",
            "dense_13 (Dense)             (None, 128)               16512     \n",
            "_________________________________________________________________\n",
            "dense_14 (Dense)             (None, 27)                3483      \n",
            "=================================================================\n",
            "Total params: 25,499\n",
            "Trainable params: 25,499\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "Epoch 1/15\n",
            "870/870 [==============================] - 3s 3ms/step - loss: 0.6936 - accuracy: 0.8519 - val_loss: 0.0787 - val_accuracy: 0.9770\n",
            "Epoch 2/15\n",
            "870/870 [==============================] - 3s 3ms/step - loss: 0.0510 - accuracy: 0.9853 - val_loss: 0.0244 - val_accuracy: 0.9943\n",
            "Epoch 3/15\n",
            "870/870 [==============================] - 3s 3ms/step - loss: 0.0206 - accuracy: 0.9945 - val_loss: 0.0077 - val_accuracy: 0.9989\n",
            "Epoch 4/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0119 - accuracy: 0.9971 - val_loss: 0.0123 - val_accuracy: 0.9989\n",
            "Epoch 5/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0112 - accuracy: 0.9977 - val_loss: 0.0040 - val_accuracy: 1.0000\n",
            "Epoch 6/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0044 - accuracy: 0.9986 - val_loss: 0.0010 - val_accuracy: 1.0000\n",
            "Epoch 7/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0141 - accuracy: 0.9983 - val_loss: 0.0042 - val_accuracy: 1.0000\n",
            "Epoch 8/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0075 - accuracy: 0.9986 - val_loss: 8.5079e-04 - val_accuracy: 1.0000\n",
            "Epoch 9/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0066 - accuracy: 0.9977 - val_loss: 0.0016 - val_accuracy: 1.0000\n",
            "Epoch 10/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0019 - accuracy: 0.9994 - val_loss: 3.2381e-04 - val_accuracy: 1.0000\n",
            "Epoch 11/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0056 - accuracy: 0.9983 - val_loss: 0.0013 - val_accuracy: 0.9989\n",
            "Epoch 12/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0058 - accuracy: 0.9991 - val_loss: 6.3880e-04 - val_accuracy: 1.0000\n",
            "Epoch 13/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0021 - accuracy: 0.9994 - val_loss: 5.1653e-04 - val_accuracy: 1.0000\n",
            "Epoch 14/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0078 - accuracy: 0.9980 - val_loss: 2.8969e-04 - val_accuracy: 1.0000\n",
            "Epoch 15/15\n",
            "870/870 [==============================] - 2s 3ms/step - loss: 0.0040 - accuracy: 0.9994 - val_loss: 3.1832e-04 - val_accuracy: 1.0000\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 356
        },
        "id": "4UhLcq1Jae-R",
        "outputId": "abf3599b-bf59-491e-bfc4-515502db0c72"
      },
      "source": [
        "fig, axs = plt.subplots(1, 2, figsize=(14,5))\n",
        "colors_graph = [\"#d69e2d\",\n",
        "                \"#927ced\",\n",
        "                \"#73bd4d\",\n",
        "                \"#e462c0\",\n",
        "                \"#eb5e52\"]\n",
        "handles = []\n",
        "\n",
        "for (model, history), color in zip(model_train_history.items(), colors_graph):\n",
        "    label = '{} ({})'.format(model.name, model.count_params())\n",
        "    axs[0].plot(history.history['loss'], c=color, ls='-.', alpha=.7)\n",
        "    axs[1].plot(history.history['accuracy'], c=color, ls='-.', alpha=.7)\n",
        "    axs[0].plot(history.history['val_loss'], c=color)\n",
        "    axs[1].plot(history.history['val_accuracy'], c=color)\n",
        "    handles.append(mpatches.Patch(color=color, label=label))\n",
        "\n",
        "for ax in axs:\n",
        "    ax.set_xlabel('Epoch')\n",
        "axs[0].set_ylabel('loss')\n",
        "axs[0].set_yscale('log')\n",
        "axs[1].set_ylabel('accuracy')\n",
        "axs[1].set_ylim(0.95,1.01)\n",
        "\n",
        "handles.append(Line2D([0], [0], color='grey', lw=1, ls='-', label='validation'))\n",
        "handles.append(Line2D([0], [0], color='grey', lw=1, ls='-.', label='training'))\n",
        "\n",
        "fig.subplots_adjust(right=0.85)\n",
        "fig.legend(handles=handles,\n",
        "           loc=\"center right\",\n",
        "           borderaxespad=1)"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7fb4b8566550>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 8
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1008x360 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "JmJ_LECNae-R"
      },
      "source": [
        "## Model export"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "km8bpVuSrwPE"
      },
      "source": [
        "Once you have a good model, you can save it on your Google Drive. The model is saved using the [folder hierarchy of OpenHand](https://github.com/ArthurFDLR/OpenHand-App#pose-classifier-models)."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MyD7zsZSfuMk",
        "outputId": "7540da22-fb4f-4c1e-9362-44bc8fd79fea"
      },
      "source": [
        "from pathlib import Path\n",
        "import json\n",
        "\n",
        "model_name = 'ANN_RightHand_1'\n",
        "\n",
        "if IN_COLAB:\n",
        "    content_path = Path('/').absolute() / 'content'\n",
        "    drive_path = content_path / 'drive'\n",
        "    google.colab.drive.mount(str(drive_path))\n",
        "    save_path = drive_path / 'My Drive'\n",
        "    \n",
        "    for subfolder in ['Pose Classification Kit', 'Models', model_name]:\n",
        "        save_path /= subfolder\n",
        "        if not (save_path).is_dir():\n",
        "            %mkdir \"{save_path}\"\n",
        "else:\n",
        "    save_path = Path('.').absolute() / model_name\n",
        "    %mkdir \"{save_path}\"\n",
        "\n",
        "model_path = save_path / '{name}.h5'.format(name = model_name)"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mounted at /content/drive\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5pc5o55gae-R",
        "outputId": "3299aa0d-d9e6-4d93-bcb8-ad6745c56601"
      },
      "source": [
        "model = keras.models.Sequential(name = '27Class_3x64',\n",
        "                                   layers =\n",
        "    [\n",
        "        keras.layers.InputLayer(input_shape=input_dim),\n",
        "        keras.layers.Dense(64, activation=keras.activations.relu),\n",
        "        keras.layers.Dense(64, activation=keras.activations.relu),\n",
        "        keras.layers.Dense(64, activation=keras.activations.relu),\n",
        "        keras.layers.Dense(len(labels), activation=keras.activations.softmax),\n",
        "    ]\n",
        ")\n",
        "\n",
        "model.summary()\n",
        "model.compile(\n",
        "    optimizer=keras.optimizers.Adam(),\n",
        "    loss='categorical_crossentropy',\n",
        "    metrics=['accuracy'],\n",
        ")\n",
        "\n",
        "model.fit(\n",
        "    x=x_train,\n",
        "    y=y_train,\n",
        "    epochs=10,\n",
        "    batch_size=4,\n",
        "    validation_split=0.15,\n",
        "    shuffle=True,\n",
        "    callbacks=[keras.callbacks.ModelCheckpoint(filepath=model_path, verbose=1, save_best_only=True)],\n",
        "    verbose = 2,\n",
        ")\n",
        "\n",
        "with open(save_path / 'class.json', 'w') as f:\n",
        "    json.dump({'labels':labels}, f)"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"27Class_3x64\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense_15 (Dense)             (None, 64)                2752      \n",
            "_________________________________________________________________\n",
            "dense_16 (Dense)             (None, 64)                4160      \n",
            "_________________________________________________________________\n",
            "dense_17 (Dense)             (None, 64)                4160      \n",
            "_________________________________________________________________\n",
            "dense_18 (Dense)             (None, 27)                1755      \n",
            "=================================================================\n",
            "Total params: 12,827\n",
            "Trainable params: 12,827\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "Epoch 1/10\n",
            "924/924 - 3s - loss: 0.8493 - accuracy: 0.7745 - val_loss: 0.1433 - val_accuracy: 0.9740\n",
            "\n",
            "Epoch 00001: val_loss improved from inf to 0.14327, saving model to /content/drive/My Drive/Pose Classification Kit/Models/ANN_RightHand_1/ANN_RightHand_1.h5\n",
            "Epoch 2/10\n",
            "924/924 - 2s - loss: 0.0822 - accuracy: 0.9764 - val_loss: 0.0242 - val_accuracy: 0.9969\n",
            "\n",
            "Epoch 00002: val_loss improved from 0.14327 to 0.02420, saving model to /content/drive/My Drive/Pose Classification Kit/Models/ANN_RightHand_1/ANN_RightHand_1.h5\n",
            "Epoch 3/10\n",
            "924/924 - 2s - loss: 0.0312 - accuracy: 0.9919 - val_loss: 0.0103 - val_accuracy: 0.9985\n",
            "\n",
            "Epoch 00003: val_loss improved from 0.02420 to 0.01033, saving model to /content/drive/My Drive/Pose Classification Kit/Models/ANN_RightHand_1/ANN_RightHand_1.h5\n",
            "Epoch 4/10\n",
            "924/924 - 2s - loss: 0.0204 - accuracy: 0.9940 - val_loss: 0.0071 - val_accuracy: 0.9985\n",
            "\n",
            "Epoch 00004: val_loss improved from 0.01033 to 0.00710, saving model to /content/drive/My Drive/Pose Classification Kit/Models/ANN_RightHand_1/ANN_RightHand_1.h5\n",
            "Epoch 5/10\n",
            "924/924 - 2s - loss: 0.0323 - accuracy: 0.9919 - val_loss: 0.0274 - val_accuracy: 0.9893\n",
            "\n",
            "Epoch 00005: val_loss did not improve from 0.00710\n",
            "Epoch 6/10\n",
            "924/924 - 2s - loss: 0.0235 - accuracy: 0.9935 - val_loss: 0.0069 - val_accuracy: 0.9985\n",
            "\n",
            "Epoch 00006: val_loss improved from 0.00710 to 0.00693, saving model to /content/drive/My Drive/Pose Classification Kit/Models/ANN_RightHand_1/ANN_RightHand_1.h5\n",
            "Epoch 7/10\n",
            "924/924 - 2s - loss: 0.0083 - accuracy: 0.9978 - val_loss: 0.0370 - val_accuracy: 0.9847\n",
            "\n",
            "Epoch 00007: val_loss did not improve from 0.00693\n",
            "Epoch 8/10\n",
            "924/924 - 2s - loss: 0.0174 - accuracy: 0.9951 - val_loss: 0.0052 - val_accuracy: 0.9969\n",
            "\n",
            "Epoch 00008: val_loss improved from 0.00693 to 0.00520, saving model to /content/drive/My Drive/Pose Classification Kit/Models/ANN_RightHand_1/ANN_RightHand_1.h5\n",
            "Epoch 9/10\n",
            "924/924 - 2s - loss: 0.0086 - accuracy: 0.9981 - val_loss: 0.0019 - val_accuracy: 1.0000\n",
            "\n",
            "Epoch 00009: val_loss improved from 0.00520 to 0.00187, saving model to /content/drive/My Drive/Pose Classification Kit/Models/ANN_RightHand_1/ANN_RightHand_1.h5\n",
            "Epoch 10/10\n",
            "924/924 - 2s - loss: 0.0178 - accuracy: 0.9943 - val_loss: 0.0372 - val_accuracy: 0.9847\n",
            "\n",
            "Epoch 00010: val_loss did not improve from 0.00187\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mPMnJf1Vae-S",
        "outputId": "d0a29d6d-64ea-49db-b695-3ad94f1d003e"
      },
      "source": [
        "model = keras.models.load_model(model_path)\n",
        "model.evaluate(x=dataset['x_test'], y=dataset['y_test_onehot'])"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "34/34 [==============================] - 0s 2ms/step - loss: 0.0033 - accuracy: 0.9991\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[0.0032896932680159807, 0.9990741014480591]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "V3lsa7aKae-S",
        "outputId": "6cee19e7-4221-44fd-b16f-b1a2fe951887",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "import itertools\n",
        "labels_predict = model.predict(dataset['x_test'])\n",
        "confusion_matrix = np.array(\n",
        "    tensorflow.math.confusion_matrix(\n",
        "        np.argmax(labels_predict,axis=1),\n",
        "        np.argmax(dataset['y_test_onehot'],axis=1)\n",
        "))\n",
        "\n",
        "fig, ax = plt.subplots(figsize=(10,10), dpi=100)\n",
        "\n",
        "ax.imshow(confusion_matrix, interpolation='nearest', cmap=plt.cm.Blues)\n",
        "tick_marks = np.arange(len(dataset['labels']))\n",
        "ax.set_xticks(tick_marks)\n",
        "ax.set_xticklabels(dataset['labels'], rotation=40, ha='right')\n",
        "ax.set_yticks(tick_marks)\n",
        "ax.set_yticklabels(dataset['labels'])\n",
        "\n",
        "thresh = np.max(confusion_matrix) / 2.\n",
        "for i, j in itertools.product(range(confusion_matrix.shape[0]), range(confusion_matrix.shape[1])):\n",
        "    plt.text(j, i, confusion_matrix[i, j],\n",
        "        horizontalalignment=\"center\",\n",
        "        color=\"white\" if confusion_matrix[i, j] > thresh else \"black\")\n",
        "\n",
        "fig.tight_layout()\n",
        "ax.set_ylabel('True label', fontsize=12)\n",
        "ax.set_xlabel('Predicted label', fontsize=12)"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 36.4591284279378, 'Predicted label')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 1000x1000 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}